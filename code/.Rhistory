data4 <- rbind(dogs, pelicans, snakes)
anova_storage <- aov(data4$Disgust.rating~data$Animal)
anova_storage <- aov(data$Disgust.rating~data$Animal)
summary(anova_storage)
data4 <- rbind(dogs, pelicans, snakes)
anova_storage <- aov(data4$Disgust.rating~data4$Animal)
summary(anova_storage)
anova_storage
model.tables(anova_storage, "means")
data4 <- rbind(dogs, pelicans, snakes)
anova_storage <- aov(data4$Disgust.rating~data4$Animal)
summary(anova_storage)
model.tables(anova_storage, "means")
data4 <- rbind(dogs, pelicans, snakes)
anova_storage <- aov(data4$Disgust.rating~data4$Animal)
summary(anova_storage)
model.tables(anova_storage, "means")
qqplot(anova_storage)
bartlett.test(data4$Disgust.rating~Animal)
bartlett.test(data4$Disgust.rating~data4$Animal)
t.test(dogs, pelicans)
t.test(dogs$Disgust.rating, pelicans$Disgust.rating)
t.test(dogs$Disgust.rating, snakes$Disgust.rating)
t.test(snakes$Disgust.rating, pelicans$Disgust.rating)
mammals <- subset(data, data$Taxonomic.group == "1")
non_mammal <- subset(data, data$Taxonomic.group == "2")
vertebrate <- subset(data, data$Taxonomic.group == "3")
shapiro.test(mammals)
mammals <- subset(data, data$Taxonomic.group == "1")
non_mammal <- subset(data, data$Taxonomic.group == "2")
vertebrate <- subset(data, data$Taxonomic.group == "3")
shapiro.test(mammals$Disgust.rating)
shapiro.test(non_mammal$Disgust.rating)
shapiro.test(vertebrate$Disgust.rating)
mammals <- subset(data, data$Taxonomic.group == "1")
non_mammal <- subset(data, data$Taxonomic.group == "2")
vertebrate <- subset(data, data$Taxonomic.group == "3")
shapiro.test(data$Disgust.rating)
shapiro.test(mammals$Disgust.rating)
shapiro.test(non_mammal$Disgust.rating)
shapiro.test(vertebrate$Disgust.rating)
size(mammals)
anova_taxonomical <- aov(data$Disgust.rating~Taxonomic.group)
anova_taxonomical <- aov(data$Disgust.rating~data$Taxonomic.group)
summary(anova_taxonomical)
anova_taxonomical <- aov(data$Disgust.rating~data$Taxonomic.group)
summary(anova_taxonomical)
anova_taxonomical
anova_taxonomical <- aov(data$Disgust.rating~data$Taxonomic.group*data$Dangerous)
summary(anova_taxonomical)
model.tables(anova_taxonomical)
model.tables(anova_taxonomical, "means")
View(dangerous)
not_dangerous <- subset(data, data$Dangerous == FALSE)
not_dangerous <- subset(data, data$Dangerous == FALSE)
anova_dangerous <- aov(dangerous$Disgust.rating~data$Taxonomic.group)
not_dangerous <- subset(data, data$Dangerous == FALSE)
anova_dangerous <- aov(dangerous$Disgust.rating~dangerous$Taxonomic.group)
anova_not_dangerous <- aov(not_dangerous$Disgust.rating~not_dangerous$Taxonomic.group)
summary(anova_dangerous)
summary(anpva_not_dangerous)
not_dangerous <- subset(data, data$Dangerous == FALSE)
anova_dangerous <- aov(dangerous$Disgust.rating~dangerous$Taxonomic.group)
anova_not_dangerous <- aov(not_dangerous$Disgust.rating~not_dangerous$Taxonomic.group)
summary(anova_dangerous)
summary(anova_not_dangerous)
View(snakes)
not_dangerous <- subset(data, data$Dangerous == FALSE)
anova_dangerous <- aov(dangerous$Disgust.rating~dangerous$Taxonomic.group)
anova_not_dangerous <- aov(not_dangerous$Disgust.rating~not_dangerous$Taxonomic.group)
summary(anova_dangerous)
summary(anova_not_dangerous)
knitr::opts_chunk$set(echo = TRUE)
data = read.csv("animalratings3.csv", sep = ",")
head(data)
summary(data)
data$Dangerous <- as.logical(data$Dangerous)
data$Dangerous <- factor(data$Dangerous)
head(data)
summary(data)
is.factor(data$Disgust.rating)
is.factor(data$Size)
is.factor(data$Taxonomic.group)
data$Disgust.rating <- as.numeric(data$Disgust.rating)
data$Size <- as.factor(data$Size)
data$Taxonomic.group <- as.factor(data$Taxonomic.group)
summary(data)
median(subset(data, data$Animal == "spider")$Disgust.rating) > 120
median(subset(data, data$Animal == "spider")$Fear.rating) > 400
spiders <- subset(data, data$Animal == "spider")
shapiro.test(spiders$Disgust.rating)
shapiro.test(spiders$Fear.rating)
t.test(spiders$Disgust.rating, spiders$Fear.rating)
t.test(subset(data, data$Animal == "wolf")$Arousal,
subset(data, data$Animal == "dog")$Arousal, var.equal = FALSE)
t.test(subset(data, data$Animal == "wolf")$Arousal,
subset(data, data$Animal == "dog")$Arousal, var.equal = TRUE)
dangerous <- subset(data, data$Dangerous == TRUE)
shapiro.test(dangerous$Arousal.rating)
shapiro.test(dangerous$Valence.rating)
t.test(dangerous$Arousal.rating, dangerous$Valence.rating)
dogs <- subset(data, data$Animal == "dog")
pelicans <- subset(data, data$Animal == "pelican")
snakes <- subset(data, data$Animal == "snake")
shapiro.test(dogs$Disgust.rating)
shapiro.test(pelicans$Disgust.rating)
shapiro.test(snakes$Disgust.rating)
data4 <- rbind(dogs, pelicans, snakes)
anova_storage <- aov(data4$Disgust.rating~data4$Animal)
summary(anova_storage)
model.tables(anova_storage, "means")
bartlett.test(data4$Disgust.rating~data4$Animal)
t.test(dogs$Disgust.rating, pelicans$Disgust.rating)
t.test(dogs$Disgust.rating, snakes$Disgust.rating)
t.test(snakes$Disgust.rating, pelicans$Disgust.rating)
mammals <- subset(data, data$Taxonomic.group == "1")
non_mammal <- subset(data, data$Taxonomic.group == "2")
vertebrate <- subset(data, data$Taxonomic.group == "3")
shapiro.test(data$Disgust.rating)
shapiro.test(mammals$Disgust.rating)
shapiro.test(non_mammal$Disgust.rating)
shapiro.test(vertebrate$Disgust.rating)
anova_taxonomical <- aov(data$Disgust.rating~data$Taxonomic.group*data$Dangerous)
summary(anova_taxonomical)
model.tables(anova_taxonomical, "means")
not_dangerous <- subset(data, data$Dangerous == FALSE)
anova_dangerous <- aov(dangerous$Disgust.rating~dangerous$Taxonomic.group)
anova_not_dangerous <- aov(not_dangerous$Disgust.rating~not_dangerous$Taxonomic.group)
summary(anova_dangerous)
summary(anova_not_dangerous)
unique(dangerous$Animal)
tapply(dangerous$Valence, Arousal$Animal, shapiro.test)
tapply(dangerous$Valence, dangerous$Animal, shapiro.test)
dangerous <- factor(dangerous)
dangerous <- factor(dangerous)
tapply(dangerous$Valence, dangerous$Animal, shapiro.test)
dangerous$Animal <- factor(dangerous$Animal)
dangerous$Animal <- factor(dangerous$Animal)
dangerous
dangerous
dangerous <- subset(data, data$Dangerous == TRUE)
dangerous
shapiro.test(dangerous$Arousal.rating)
shapiro.test(dangerous$Valence.rating)
dangerous <- subset(data, data$Dangerous == TRUE)
shapiro.test(dangerous$Arousal.rating)
shapiro.test(dangerous$Valence.rating)
dangerous$Animal <- factor(dangerous$Animal)
tapply(dangerous$Valence, dangerous$Animal, shapiro.test)
tapply(dangerous$Arousal.rating, dangerous$Animal, shapiro.test)
tapply(dangerous$Arousal.rating, dangerous$Valence.rating, t.test)
tapply(dangerous$Arousal.rating, dangerous$Valence.rating, dangerous$Valence.rating, t.test)
tapply(c(dangerous$Arousal.rating, dangerous$Valence.rating), dangerous$Valence.rating, t.test)
t.test(dangerous$Arousal.rating, dangerous$Valence.rating)
t.test(subset(dangerous$hyena)$Arousal, subset(dangerous$hyena)$Valence)
t.test(subset(dangerous, dangerous$Animal == "hyena")$Arousal,
subset(dangerous, dangerous$Animal == "hyena")$Valence)
t.test(subset(dangerous, dangerous$Animal == "hyena")$Arousal,
subset(dangerous, dangerous$Animal == "hyena")$Valence)
t.test(subset(dangerous, dangerous$Animal == "shark")$Arousal,
subset(dangerous, dangerous$Animal == "shark")$Valence)
t.test(subset(dangerous, dangerous$Animal == "snake")$Arousal,
subset(dangerous, dangerous$Animal == "snake")$Valence)
t.test(subset(dangerous, dangerous$Animal == "spider")$Arousal,
subset(dangerous, dangerous$Animal == "spider")$Valence)
t.test(subset(dangerous, dangerous$Animal == "tiger")$Arousal,
subset(dangerous, dangerous$Animal == "tiger")$Valence)
t.test(subset(dangerous, dangerous$Animal == "wolf")$Arousal,
subset(dangerous, dangerous$Animal == "wolf")$Valence)
t.test(dangerous$Arousal.rating, dangerous$Valence.rating)
boxplot(anova_dangerous)
boxplot(dangerous$Disgust.rating~dangerous$Taxonomic.group)
boxplot(not_dangerous$Disgust.rating~not_dangerous$Taxonomic.group)
boxplot(dangerous$Disgust.rating~dangerous$Taxonomic.group)
boxplot(not_dangerous$Disgust.rating~not_dangerous$Taxonomic.group)
knitr::opts_chunk$set(echo = TRUE)
install.packages("melanoma")
library("melanoma")
install.packages("boot")
library("melanoma")
melanoma
data <- open(melanoma)
data <- open("melanoma")
boot.melanoma
library("boot")
boot.melanoma
melanoma
data <- melanoma
head(data)
summary(data)
library("boot")
data <- melanoma
head(data)
summary(data)
data$ulcer <- as.logical(data$ulcer)
summary(data)
data$ulcer <- as.logical(data$ulcer)
data$sex [data$sex == 1] <- "male"
data$sex [data$sex == 0] <- "female"
summary(data)
data$sex <- as.factor(data$sex)
data$ulcer <- as.logical(data$ulcer)
data$sex [data$sex == 1] <- "male"
data$sex [data$sex == 0] <- "female"
data$sex <- as.factor(data$sex)
summary(data)
data$ulcer <- as.logical(data$ulcer)
data$sex [data$sex == 1] <- "male"
data$sex [data$sex == 0] <- "female"
data$sex <- as.factor(data$sex)
data$status <- as.factor(data$status)
summary(data)
knitr::opts_chunk$set(echo = TRUE)
dead_cancer <- subset(data, data$status == 1)
dead_cancer <- subset(data, data$status == "1")
knitr::opts_chunk$set(echo = TRUE)
library("boot")
data <- melanoma
head(data)
summary(data)
data$ulcer <- as.logical(data$ulcer)
data$sex [data$sex == 1] <- "male"
data$sex [data$sex == 0] <- "female"
data$sex <- as.factor(data$sex)
data$status <- as.factor(data$status)
summary(data)
dead_cancer <- subset(data, data$status == "1")
dead_cancer <- subset(data, data$status == 1)
alive <- subset(data, data$status == 2)
dead_other <- subset(data, data$status == 3)
shapiro.test(dead_cancer)
shapiro.test(dead_cancer$age)
shapiro.test(alive$age)
dead_cancer <- subset(data, data$status == 1)
alive <- subset(data, data$status == 2)
dead_other <- subset(data, data$status == 3)
shapiro.test(dead_cancer$age)
shapiro.test(alive$age)
shapiro.test(dead_other$age)
shapiro.test(data$age)
hist(dead_cancer$age, col = rgb(0,0,1,0.4), xlim = limit, main = "Patiend status in relation to age", xlab = "age")
hist(dead_cancer$age, col = rgb(0,0,1,0.4), main = "Patiend status in relation to age", xlab = "age")
hist(alive$age, col = rgb(0,1,0,0.4), add = T)
hist(dead_other$age, col = rgb(1,0,0,0.4), add = T)
legend("topright", c("Dead of cancer", "Alive", "Dead of other causes"), fill = c(rgb(0,0,1,0.4), rgb(0,1,0,0.4), rgb(1,0,0,0.4)))
hist(dead_cancer$age, col = rgb(0,0,1,0.4), limit = c(0, 100), main = "Patiend status in relation to age", xlab = "age")
hist(alive$age, col = rgb(0,1,0,0.4), add = T)
hist(dead_other$age, col = rgb(1,0,0,0.4), add = T)
legend("topright", c("Dead of cancer", "Alive", "Dead of other causes"), fill = c(rgb(0,0,1,0.4), rgb(0,1,0,0.4), rgb(1,0,0,0.4)))
hist(dead_cancer$age, col = rgb(0,0,1,0.4), xlim = c(0, 100), main = "Patiend status in relation to age", xlab = "age")
hist(alive$age, col = rgb(0,1,0,0.4), add = T)
hist(dead_other$age, col = rgb(1,0,0,0.4), add = T)
legend("topright", c("Dead of cancer", "Alive", "Dead of other causes"), fill = c(rgb(0,0,1,0.4), rgb(0,1,0,0.4), rgb(1,0,0,0.4)))
hist(dead_cancer$age, col = rgb(0,0,1,0.4), xlim = c(0, 100), ylim = c(0, 30), main = "Patiend status in relation to age", xlab = "age")
hist(alive$age, col = rgb(0,1,0,0.4), add = T)
hist(dead_other$age, col = rgb(1,0,0,0.4), add = T)
legend("topright", c("Dead of cancer", "Alive", "Dead of other causes"), fill = c(rgb(0,0,1,0.4), rgb(0,1,0,0.4), rgb(1,0,0,0.4)))
hist(dead_cancer$age, col = rgb(0,0,1,0.4), xlim = c(0, 100), ylim = c(0, 50), main = "Patiend status in relation to age", xlab = "age")
hist(alive$age, col = rgb(0,1,0,0.4), add = T)
hist(dead_other$age, col = rgb(1,0,0,0.4), add = T)
legend("topright", c("Dead of cancer", "Alive", "Dead of other causes"), fill = c(rgb(0,0,1,0.4), rgb(0,1,0,0.4), rgb(1,0,0,0.4)))
hist(dead_cancer$age, col = rgb(0,0,1,0.4), xlim = c(0, 100), ylim = c(0, 35), main = "Patiend status in relation to age", xlab = "age")
hist(alive$age, col = rgb(0,1,0,0.4), add = T)
hist(dead_other$age, col = rgb(1,0,0,0.4), add = T)
legend("topright", c("Dead of cancer", "Alive", "Dead of other causes"), fill = c(rgb(0,0,1,0.4), rgb(0,1,0,0.4), rgb(1,0,0,0.4)))
hist(dead_cancer$age, col = rgb(0,0,1,0.4), xlim = c(0, 100), ylim = c(0, 35), bins = 20, main = "Patiend status in relation to age", xlab = "age")
hist(alive$age, col = rgb(0,1,0,0.4), add = T)
hist(dead_other$age, col = rgb(1,0,0,0.4), add = T)
legend("topright", c("Dead of cancer", "Alive", "Dead of other causes"), fill = c(rgb(0,0,1,0.4), rgb(0,1,0,0.4), rgb(1,0,0,0.4)))
hist(dead_cancer$age, col = rgb(0,0,1,0.4), xlim = c(0, 100), ylim = c(0, 35), breaks = 20, main = "Patiend status in relation to age", xlab = "age")
hist(alive$age, col = rgb(0,1,0,0.4), add = T)
hist(dead_other$age, col = rgb(1,0,0,0.4), add = T)
legend("topright", c("Dead of cancer", "Alive", "Dead of other causes"), fill = c(rgb(0,0,1,0.4), rgb(0,1,0,0.4), rgb(1,0,0,0.4)))
hist(dead_cancer$age, col = rgb(0,0,1,0.4), xlim = c(0, 100), ylim = c(0, 35), breaks = 20, main = "Patiend status in relation to age", xlab = "age")
hist(alive$age, col = rgb(0,1,0,0.4), breaks = 20, add = T)
hist(dead_other$age, col = rgb(1,0,0,0.4), breaks = 20, add = T)
legend("topright", c("Dead of cancer", "Alive", "Dead of other causes"), fill = c(rgb(0,0,1,0.4), rgb(0,1,0,0.4), rgb(1,0,0,0.4)))
hist(dead_cancer$age, col = rgb(0,0,1,0.4), xlim = c(0, 100), ylim = c(0, 20), breaks = 15, main = "Patiend status in relation to age", xlab = "age")
hist(alive$age, col = rgb(0,1,0,0.4), breaks = 15, add = T)
hist(dead_other$age, col = rgb(1,0,0,0.4), breaks = 15, add = T)
legend("topright", c("Dead of cancer", "Alive", "Dead of other causes"), fill = c(rgb(0,0,1,0.4), rgb(0,1,0,0.4), rgb(1,0,0,0.4)))
hist(dead_cancer$age, col = rgb(0,0,1,0.4), xlim = c(0, 100), ylim = c(0, 20), breaks = seq(0, 100, 5), main = "Patiend status in relation to age", xlab = "age")
hist(alive$age, col = rgb(0,1,0,0.4), breaks = seq(0, 100, 5), add = T)
hist(dead_other$age, col = rgb(1,0,0,0.4), breaks = seq(0, 100, 5), add = T)
legend("topright", c("Dead of cancer", "Alive", "Dead of other causes"), fill = c(rgb(0,0,1,0.4), rgb(0,1,0,0.4), rgb(1,0,0,0.4)))
hist(dead_cancer$age, col = rgb(0,0,1,0.4), xlim = c(0, 100), ylim = c(0, 20), breaks = seq(0, 100, 5), main = "Patient status in relation to age", xlab = "age")
hist(alive$age, col = rgb(0,1,0,0.4), breaks = seq(0, 100, 5), add = T)
hist(dead_other$age, col = rgb(1,0,0,0.4), breaks = seq(0, 100, 5), add = T)
legend("topright", c("Dead of cancer", "Alive", "Dead of other causes"), fill = c(rgb(0,0,1,0.4), rgb(0,1,0,0.4), rgb(1,0,0,0.4)))
hist(dead_cancer$age, col = rgb(0,0,1,0.4), ylim = c(0, 20), breaks = seq(0, 100, 5), main = "Patient status in relation to age", xlab = "age")
hist(alive$age, col = rgb(0,1,0,0.4), breaks = seq(0, 100, 5), add = T)
hist(dead_other$age, col = rgb(1,0,0,0.4), breaks = seq(0, 100, 5), add = T)
legend("topright", c("Dead of cancer", "Alive", "Dead of other causes"), fill = c(rgb(0,0,1,0.4), rgb(0,1,0,0.4), rgb(1,0,0,0.4)))
anova_storage <- aov(data$age~data$status)
summary(anova_storage)
model.tables(anova_storage)
model.tables(anova_storage, "means")
model.tables(anova_storage, "means")
t.test(dead_cancer, alive)
t.test(dead_cancer$age, alive$age)
t.test(dead_cancer$age, dead_other$age)
t.test(dead_other$age, alive$age)
scatter(data$age, data$thickness)
plot.scatter(data$age, data$thickness)
plot(data$age, data$thickness)
lm(data$age, data$thickness)
data(data$age, data$thickness)
plot(data$age, data$thickness)
plot(data$age, data$thickness)
abline(h = 0)
plot(data$age, data$thickness)
abline(h = 0, lty = 3)
plot(data$age, data$thickness)
abline(h = 0, lty = 3, col = 2)
plot(data$age, data$thickness)
abline(h = 5, lty = 3, col = 2)
scatter.smooth(data$age, data$thickness)
#abline(h = 5, lty = 3, col = 2)
scatter.smooth(data$age, data$thickness)
abline(data$age, data$thickness)
plot(data$age, data$thickness)
abline(data$age, data$thickness)
scatter.smooth(data$age, data$thickness)
abline(data$age, data$thickness)
plot(data$age, data$thickness)
abline(data$age, data$thickness)
plot(data$age, data$thickness)
abline(lm(data$age, data$thickness))
abline(data$age, data$thickness)
plot(data$age, data$thickness)
abline(data$age, data$thickness)
plot(data$age, data$thickness)
abline(lm(data$age, data$thickness))
plot(data$age, data$thickness)
abline(data$age, data$thickness)
plot(data$age, data$thickness)
abline(data$age, data$thickness, col = 2)
plot(data$age, data$thickness)
abline(lm(data$age ~ data$thickness))
plot(data$age, data$thickness)
abline(lm(data$age ~ data$thickness), col = "red")
plot(data$age, data$thickness)
abline(lm(data$thickness ~ data$age), col = "red")
plot(data$age, data$thickness, xlim = c(0, 100))
abline(lm(data$thickness ~ data$age), col = "red")
plot(data$age, data$thickness, xlim = c(0, max(data$age)))
abline(lm(data$thickness ~ data$age), col = "red")
plot(data$age, data$thickness, xlim = c(0, max(data$age) + 10))
abline(lm(data$thickness ~ data$age), col = "red")
plot(data$age, data$thickness, xlim = c(0, max(data$age) + 5))
abline(lm(data$thickness ~ data$age), col = "red")
vif(lm(data$thickness ~ data$age))
VIF(lm(data$thickness ~ data$age))
library(car)
library("car")
install.packages("car")
library("car")
VIF(lm(data$thickness ~ data$age))
library("car")
VIF(lm(data$thickness ~ data$age))
vif(lm(data$thickness ~ data$age))
vif(lm(data$thickness ~ data$age))
vif(lm(data$thickness ~ data$age, data = data))
t.test(data$age, data$thickness)
shapiro.test(data$age)
shapiro.test(data$thickness)
hist(data$age)
hist(data$age, col = c(1, 0, 0, 0.4))
hist(data$age, rgb = c(1, 0, 0, 0.4))
hist(data$age, col = rgb(1, 0, 0, 0.4))
hist(data$age, col = rgb(1, 1, 0, 0.4))
hist(data$age, col = rgb(1, 1, 0, 0.4), breaks = seq(0, 100, 5))
hist(data$age, col = rgb(1, 1, 0, 0.4), breaks = seq(0, 100, 5), main = "Ages of patients")
hist(data$age, col = rgb(1, 1, 0, 0.4), breaks = seq(0, 100, 5), main = "Ages of patients", xlab = age, ylab = count)
hist(data$age, col = rgb(1, 1, 0, 0.4), breaks = seq(0, 100, 5), main = "Ages of patients", xlab = "Age", ylab = "Count")
knitr::opts_chunk$set(echo = TRUE)
library("boot")
data <- melanoma
head(data)
summary(data)
data$ulcer <- as.logical(data$ulcer)
data$sex [data$sex == 1] <- "male"
data$sex [data$sex == 0] <- "female"
data$sex <- as.factor(data$sex)
data$status <- as.factor(data$status)
summary(data)
dead_cancer <- subset(data, data$status == 1)
alive <- subset(data, data$status == 2)
dead_other <- subset(data, data$status == 3)
shapiro.test(dead_cancer$age)
shapiro.test(alive$age)
shapiro.test(dead_other$age)
shapiro.test(data$age)
hist(dead_cancer$age, col = rgb(0,0,1,0.4), ylim = c(0, 20), breaks = seq(0, 100, 5), main = "Patient status in relation to age", xlab = "age")
hist(alive$age, col = rgb(0,1,0,0.4), breaks = seq(0, 100, 5), add = T)
hist(dead_other$age, col = rgb(1,0,0,0.4), breaks = seq(0, 100, 5), add = T)
legend("topright", c("Dead of cancer", "Alive", "Dead of other causes"), fill = c(rgb(0,0,1,0.4), rgb(0,1,0,0.4), rgb(1,0,0,0.4)))
anova_storage <- aov(data$age~data$status)
summary(anova_storage)
model.tables(anova_storage, "means")
t.test(dead_cancer$age, alive$age)
t.test(dead_cancer$age, dead_other$age)
t.test(dead_other$age, alive$age)
plot(data$age, data$thickness, xlim = c(0, max(data$age) + 5))
abline(lm(data$thickness ~ data$age), col = "red")
t.test(data$age, data$thickness)
hist(data$age, col = rgb(1, 1, 0, 0.4), breaks = seq(0, 100, 5), main = "Ages of patients", xlab = "Age", ylab = "Count")
hist(data$thickness, col = rbg(1, 0, 1, 0.4), main = "Thickness of the cancer", ylab = "Count", xlab = "Thickness in mm")
hist(data$age, col = rgb(1, 1, 0, 0.4), breaks = seq(0, 100, 5), main = "Ages of patients", xlab = "Age", ylab = "Count")
hist(data$thickness, col = rgb(1, 0, 1, 0.4), main = "Thickness of the cancer", ylab = "Count", xlab = "Thickness in mm")
hist(data$thickness, col = rgb(1, 0, 1, 0.4), xlim = c(0, max(data$thickness)+5), main = "Thickness of the cancer", ylab = "Count", xlab = "Thickness in mm")
hist(data$thickness, col = rgb(1, 0, 1, 0.4), breaks = seq(0, 20, 1), main = "Thickness of the cancer", ylab = "Count", xlab = "Thickness in mm")
knitr::opts_chunk$set(echo = TRUE)
library("boot")
data <- melanoma
head(data)
summary(data)
data$ulcer <- as.logical(data$ulcer)
data$sex [data$sex == 1] <- "male"
data$sex [data$sex == 0] <- "female"
data$sex <- as.factor(data$sex)
data$status <- as.factor(data$status)
summary(data)
dead_cancer <- subset(data, data$status == 1)
alive <- subset(data, data$status == 2)
dead_other <- subset(data, data$status == 3)
shapiro.test(dead_cancer$age)
shapiro.test(alive$age)
shapiro.test(dead_other$age)
shapiro.test(data$age)
hist(dead_cancer$age, col = rgb(0,0,1,0.4), ylim = c(0, 20), breaks = seq(0, 100, 5), main = "Patient status in relation to age", xlab = "age")
hist(alive$age, col = rgb(0,1,0,0.4), breaks = seq(0, 100, 5), add = T)
hist(dead_other$age, col = rgb(1,0,0,0.4), breaks = seq(0, 100, 5), add = T)
legend("topright", c("Dead of cancer", "Alive", "Dead of other causes"), fill = c(rgb(0,0,1,0.4), rgb(0,1,0,0.4), rgb(1,0,0,0.4)))
anova_storage <- aov(data$age~data$status)
summary(anova_storage)
model.tables(anova_storage, "means")
t.test(dead_cancer$age, alive$age)
t.test(dead_cancer$age, dead_other$age)
t.test(dead_other$age, alive$age)
plot(data$age, data$thickness, xlim = c(0, max(data$age) + 5))
abline(lm(data$thickness ~ data$age), col = "red")
t.test(data$age, data$thickness)
hist(data$age, col = rgb(1, 1, 0, 0.4), breaks = seq(0, 100, 5), main = "Ages of patients", xlab = "Age", ylab = "Count")
hist(data$thickness, col = rgb(1, 0, 1, 0.4), breaks = seq(0, 20, 1), main = "Thickness of the cancer", ylab = "Count", xlab = "Thickness in mm")
shapiro.test(data$age)
shapiro.test(data$thickness)
vif(lm(data$thickness ~ data$age))
vif(lm(thickness ~ age, data = data))
vif(lm(data$thickness ~ data$age)
vif(lm(data$thickness ~ data$age))
vif(lm(data$thickness ~ data$age))
vif(lm(data$thickness ~ data$age), data = data)
vif(lm(data$thickness ~ data$age, data = data))
vif(lm(thickness ~ age, data = data))
library("car")
data2 <- data
vif(lm(thickness ~ age, data = data2))
vif(lm(thickness ~ age + status, data = data2))
vif(lm(thickness ~ age + status, data = data))
vif(lm(thickness ~ age + status, data = data))
View(data)
View(data)
vif(lm(thickness ~ age + time + sex + ulcer, data = data))
vif(lm(thickness ~ age + status + sex + ulcer, data = data))
vif(lm(thickness ~ age + status + sex, data = data))
vif(lm(thickness ~ age + status + sex + ulcer, data = data))
vif(lm(thickness ~ age + status, data = data))
vif(lm(thickness ~ age + status + sex + ulcer, data = data))
vif(lm(thickness ~ age + status + sex + ulcer + status + year, data = data))
vif(lm(thickness ~ age + status + sex + ulcer + time + year, data = data))
vif(lm(thickness ~ age + status + sex + ulcer, data = data))
vif(lm(thickness ~ age + status + sex + ulcer, data = data))
vif(lm(thickness ~ age + time + sex + ulcer, data = data))
vif(lm(thickness ~ age + year + sex + ulcer, data = data))
vif(lm(thickness ~ age + time + sex + ulcer, data = data))
vif(lm(thickness ~ age + status + sex + ulcer, data = data))
vif(lm(thickness ~ age + time + sex + ulcer, data = data))
vif(lm(thickness ~ age + year + sex + ulcer, data = data))
vif(lm(thickness ~ age + status + time + sex + ulcer, data = data))
vif(lm(thickness ~ age + status + year + sex + ulcer, data = data))
vif(lm(thickness ~ age + time + year + sex + ulcer, data = data))
vif(lm(thickness ~ age + year + sex + ulcer, data = data))
plot(data$age, data$thickness, xlab = "Age", ylab = "Cancer thickness", xlim = c(0, max(data$age) + 5))
abline(lm(data$thickness ~ data$age), col = "red")
# This chunk just sets echo = TRUE as default (i.e. print all code)
knitr::opts_chunk$set(echo = TRUE)
library(rstan)
library(ggplot2)
options(mc.cores = parallel::detectCores())
rstan_options(auto_write = TRUE)
Sys.setenv(LOCAL_CPPFLAGS = '-march=native')
SEED <- 48927 # set random seed for reproducability
csv <- read.csv("../data/Melanoma.csv", header=TRUE)
data_melanoma <- as.data.frame(csv)
#dead <- data_melanoma[data_melanoma$status == 1,]
#alive <- data_melanoma[data_melanoma$status != 1,]
input <- list(N = nrow(data_melanoma),
x = data_melanoma$time,
y = data_melanoma$thickness)
data_melanoma$ulcer <- as.logical(data_melanoma$ulcer)
data_melanoma$sex [data_melanoma$sex == 1] <- "male"
data_melanoma$sex [data_melanoma$sex == 0] <- "female"
data_melanoma$sex <- as.factor(data_melanoma$sex)
data_melanoma$status <- as.factor(data_melanoma$status)
summary(data_melanoma)
head(data_melanoma)
ggplot() +
geom_point(aes(x, y), data = data.frame(input), size = 1) +
labs(y = 'Tumour thickness (cm)', x= 'Survival time (days)') +
guides(linetype = F)
fit_linear <- stan(file='project.stan', data=input, seed=SEED)
